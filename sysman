#!/bin/bash

# No globbing
set -f 

HISTFILE=~/.bash_history 

# Absolute paths to executables - Specify the versions we want to use. We don't want to use whatever is in ${PATH} (as specified in the assignment)
PRINTF=/usr/bin/printf
BASIC=./basic
ADVANCED=./advanced

# Use the built in for echo and read
ECHO="command echo"
READ="command read"

# TODO trap SIGINT and whatever else I need to

declare -i choice

function mainmenu() {
cat << EOF
 
 Welcome to System Manager
 -------------------------

1) basic menu options
2) advanced menu options
3) passwd file options
4) quit

EOF
}

function basicmenu() {

cat << EOF

Basic Tasks Menu
----------------

1) Show free memory
2) Show free disk space
3) Show disk quota
4) Show the groups I am a member of
5) Show the history of commands for bash
6) Quit this menu

EOF
}

function advancedmenu() {

cat << EOF	

Advanced Tasks Menu
----------------

1) Print the number of CPUs available on the system
2) Print the maximum number of open files allowed per user
3) Backup all files that match a criterion
4) Quit this menu

EOF
}

function passwdmenu() {
cat << EOF

Passwd Tasks Menu
----------------

1) Print the userid of a specified user
2) Print the groupid of a specified user
3) Print the comment field for a specified user
4) Print the home directory of a specified user
5) Print the default shell of a specified user
6) Exit this menu

EOF
}

# $1 is the menu to render, $2 is the prompt
function getchoice() {
	local -i menuopts
	
	choice=0

	# Output the menu to a variable - sfind out how many options there are and only include lines starting with a single number and a )
	menuopts=$(( $($ECHO "$($1)" | grep '^[0-9])' -c) ))
	#echo "Menu opts count is ${menuopts}"
	#exit 0
	while (( choice <= 0 || choice > menuopts ));
	do
		# Display the menu
		$1

		# Display the prompt and get the next number
		$PRINTF "%s" "$2"
		$READ choice
		if (( choice <= 0 || choice > menuopts )); then
			$ECHO "Invalid choice. Please try again"
		fi

	done

}

choice=0

while (( choice != 4 ))
do
	getchoice mainmenu "Please enter a choice :"
	case ${choice} in
 
		1)
			getchoice basicmenu "Please enter an option :"
			case ${choice} in
			
				1)	
					$BASIC freemem
					;;
				2)	
					$BASIC diskfree
					;;
				3)	
					$BASIC quota
					;;
				4)	
					$BASIC groups
					;;
				5)	
					$BASIC history
					;;
				6)	
					continue
					;;
			esac
			choice=0		
			;;
		2)
			wildcard=""
			destination=""
			getchoice advancedmenu "Please enter your choice :"
			case ${choice} in
			
				1) 
					$ADVANCED -p
					;;
				2)	$ADVANCED -o
					;;
				3)	$PRINTF "Enter the wildcard to find files that you would like to backup (e.g *.txt) >"
					$READ wildcard
					$PRINTF "Enter the destination directory to backup the files to >"
					$READ destination
					$ADVANCED -b "${wildcard}" "${destination}"

					;;
				4)
					choice=0	
					continue
					;;	
			esac
			choice=0
			;;		
		3)
			getchoice passwdmenu "Please enter your selection :"	
			;;
	esac
done

echo "Bye Bye"
