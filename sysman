#!/bin/bash

# No globbing
set -f 

HISTFILE=~/.bash_history 

# Absolute paths to executables - Specify the versions we want to use. We don't want to use whatever is in ${PATH} (as specified in the assignment)
ADVANCED=./advanced
BASIC=./basic
CAT=/usr/bin/cat
GREP=/usr/bin/grep
PRINTF=/usr/bin/printf
USERMAN=./userman

# Use the built in for echo, read and exit
ECHO="command echo"
EXIT="command exit"
READ="command read"

# Handle  SIGINT interrupts
trap handler SIGINT

declare -i CHOICE

function handler() {
	$PRINTF "\nThank you for using System Manager.\n"
	$EXIT 3
}


function mainmenu() {
$CAT << EOF
 
 Welcome to System Manager
 -------------------------

1) basic menu options
2) advanced menu options
3) passwd file options
4) quit

EOF
}

function basicmenu() {
$CAT << EOF

Basic Tasks Menu
----------------

1) Show free memory
2) Show free disk space
3) Show disk quota
4) Show the groups I am a member of
5) Show the history of commands for bash
6) Quit this menu

EOF
}

function advancedmenu() {
$CAT << EOF

Advanced Tasks Menu
----------------

1) Print the number of CPUs available on the system
2) Print the maximum number of open files allowed per user
3) Backup all files that match a criterion
4) Quit this menu

EOF
}

function passwdmenu() {
$CAT << EOF

Passwd Tasks Menu
----------------

1) Print the userid of a specified user
2) Print the groupid of a specified user
3) Print the comment field for a specified user
4) Print the home directory of a specified user
5) Print the default shell of a specified user
6) Exit this menu

EOF
}

# Renders a menu and gets an integer choice (verified to be a valid choice)
# $1 is the menu to render, $2 is the prompt
function getchoice() {
	local -i MENUOPTS
	
	CHOICE=0

	# Output the menu to a variable - find out how many options there are and only include lines starting with a single number and a )
	MENUOPTS=$(( $($ECHO "$($1)" | $GREP '^[0-9])' -c) ))
	
	#Continue until a valid entry has been made
	while (( CHOICE <= 0 || CHOICE > MENUOPTS ));
	do
		# Display the menu
		$1

		# Display the prompt and get the next number
		$PRINTF "%s" "$2"
		$READ CHOICE
		if (( CHOICE <= 0 || CHOICE > MENUOPTS )); then
			$ECHO "Invalid choice. Please try again"
		fi

	done
}

CHOICE=0

while (( CHOICE != 4 ))
do
	getchoice mainmenu "Please enter a choice :"
	case ${CHOICE} in
 
		1)
			getchoice basicmenu "Please enter an option :"
			case ${CHOICE} in
			
				1)	
					$BASIC freemem
					;;
				2)	
					$BASIC diskfree
					;;
				3)	
					$BASIC quota
					;;
				4)	
					$BASIC groups
					;;
				5)	
					$BASIC history
					;;
				6)	
					continue
					;;
			esac
			CHOICE=0		
			;;
		2)
			wildcard=""
			destination=""
			getchoice advancedmenu "Please enter your choice :"
			case ${CHOICE} in
			
				1) 
					$ADVANCED -p
					;;
				2)	$ADVANCED -o
					;;
				3)	$PRINTF "Enter the wildcard to find files that you would like to backup (e.g *.txt) >"
					$READ wildcard
					$PRINTF "Enter the destination directory to backup the files to >"
					$READ destination
					$ADVANCED -b "${wildcard}" "${destination}"

					;;
				4)
					CHOICE=0	
					continue
					;;	
			esac
			CHOICE=0
			;;		
		3)
			username=""
			getchoice passwdmenu "Please enter your selection :"	
			
			#If its quit this menu, then skip username related tasks
			if [ ${CHOICE} = 6 ]; then
				CHOICE=0
				continue
			fi

			$PRINTF "Enter the username >"
			$READ username
			case ${CHOICE} in
				1)
					$USERMAN userid "${username}"
					;;
				2)	
					$USERMAN groupid "${username}"
					;;
				3)	
					$USERMAN comment "${username}"
					;;
				4)
					$USERMAN home "${username}"
					;;
				5)
					$USERMAN shell "${username}"
					;;
			esac
			CHOICE=0
			;;
	esac
done

$PRINTF "\nThank you for using System Manager.\n"
